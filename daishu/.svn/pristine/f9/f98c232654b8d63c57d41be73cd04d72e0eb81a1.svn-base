/**
 * 如果位目录层数大于两级需要修改路径
 */
const { $Toast, $Message } = require('../../utils/iview/base/index');
import Tools from '../../utils/modules/Tools';
import Config from '../../config';
import utils from '../../utils/utils';

const app = getApp()

Page({

  /**
   * 页面的初始数据
   */
  data: {
    modal : {
			tips : '提示',
			message : '模态框说明',
			ok : 'modalOk',
			cancel : 'modalCancel',
			ishide : true
		},
		currentUserInfo: '', // 用户基本信息
		activeIdx: -1, // tabbar当前下标
		CustomBar: 0, // 自定义导航栏高度
		warehousingCheckedList: [], // 准备入仓商品列表
		shippingOffice: '', // 送货公司
		deliveryLicensePlate: '', // 送货车牌
		warehousingRemark: '', // 用户填写的入仓备注
		result: [], // 商品列表包装城接口需要的格式
	},

	/**
	 * 用户输入送货公司
	 */
	handleShippingOfficeInput(e) {
		this.setData({
			shippingOffice: e.detail.value
		})
	},

	/**
	 * 用户输入送货车牌
	 */
	handleDeliveryLicensePlateInput(e) {
		this.setData({
			deliveryLicensePlate: e.detail.value
		})
	},

  /**
   * 用户填写入仓备注
   */
  handleWarehousingRemarkInput(e) {
    const that = this
    const remark = e.detail.value
    that.setData({
      warehousingRemark: remark
    })
	},

	/**
	 * 将商品列表包装城接口需要的格式
	*/ 
  packagingData(arr) {
		const that = this
    let result = []
    // 后端接口需要的参数列表
    const props = [
      "company_id",
      "warehouse_id",
      "customer_id",
      "item_id",
      "quantity_e",
      "batch1",
      "batch2",
      "production_date",
      "expiration_date",
      "remark"
		]
		const propsLen = props.length
    arr.map((item, index) => {
			result[index] = {}
      for (let i = 0; i < propsLen; i++) {
        result[index][props[i]] = item[props[i]]
      }
    })
    that.setData({
      result
    }, () => {
			console.log('result', that.data.result)
		})
  },

  /**
	 * 用户点击确认下单
	 */
  handleConfirmOrder() {
		const that = this
		const { shippingOffice, deliveryLicensePlate, warehousingRemark, currentUserInfo } = that.data
		if (shippingOffice === '') {
			wx.showToast({
				title: '请输入送货公司',
				icon: 'none',
				duration: 1500
			})
			return false
		} else if (deliveryLicensePlate === '') {
			wx.showToast({
				title: '请输入送货车牌号码',
				icon: 'none',
				duration: 1500
			})
			return false
		} else if (warehousingRemark === '') {
			wx.showToast({
				title: '请填写备注信息',
				icon: 'none',
				duration: 1500
			})
			return false
		} else {
			wx.showModal({
				title: '提示',
				content: '是否确认下单？',
				success (res) {
					if (res.confirm) {
						const parameter = {
							type: 0,
							company_id: currentUserInfo.company_id,
							warehouse_id: currentUserInfo.warehouse_id,
							warehouse_name: currentUserInfo.warehouse_name,
							kefu: currentUserInfo.kefu,
							xcx_openid: currentUserInfo.xcx_openid,
							print_custom: currentUserInfo.print_custom,
							table_num: currentUserInfo.table_num,
							customer_id: currentUserInfo.customer_id,
							customer_name: currentUserInfo.customer_name,
							delivery_company: that.data.shippingOffice,
							delivery_plate: that.data.deliveryLicensePlate,
							remark: that.data.warehousingRemark,
							details: that.data.result
						}
						app.request.json_post('/xcx/bill/save', parameter, that.navgateToPage).then(res => {
							that.navgateToPage(1)
						})
					}
				}
			})
		}
	},
	
	/**
	 * 下单结果
	 * @param {*} param 
	 */
  navgateToPage(param) {
		const that = this
		param = param ? param : 0
		if (param == 1) {
			let warehousingCheckedList = that.data.warehousingCheckedList
			let warehousingList = wx.getStorageSync('warehousingList')
			warehousingCheckedList.forEach(item => {
				let warehousingListLen = warehousingList.length
				for (let i = 0; i < warehousingListLen; i++) {
					if (item.item_id === warehousingList[i].id) {
						warehousingList.splice(i, 1)
					}
					break;
				}
			})
			wx.setStorageSync('warehousingList', warehousingList)
		} 
    // 0:下单失败 1:下单成功
    wx.navigateTo({
      url: '/packageB/in_stock_res/in_stock_res?res=' + param,
    })
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    const that = this
		const CustomBar = app.store.custom.CustomBar
		const currentUserInfo = wx.getStorageSync("currentUserInfo")
		let warehousingCheckedList = wx.getStorageSync("warehousingCheckedList")
		warehousingCheckedList.map((item, index) => {
      item.quantity_e = parseInt(item.totalNum)
      item.item_id = item.id
      item.warehouse_id = currentUserInfo.warehouse_id
			item.company_id = currentUserInfo.company_id
			delete item.id
    })
    that.setData({
			CustomBar,
			currentUserInfo,
      warehousingCheckedList
		})
		that.packagingData(warehousingCheckedList)
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})